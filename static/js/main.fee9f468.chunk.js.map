{"version":3,"sources":["firebase.js","components/pages/CalendarPage.js","components/UI/atoms/box.js","components/UI/organisms/modal.js","components/UI/atoms/text.js","assets/svg/close-light.svg","components/UI/atoms/button.js","components/UI/atoms/sign.js","assets/svg/check-light.svg","assets/svg/edit-solid.svg","assets/svg/more-light.svg","components/pages/TodoPage.js","components/UI/molecules/side/Todo.js","assets/svg/thumbs-up-regular.svg","assets/svg/thumbs-down-regular.svg","assets/svg/circle-regular.svg","components/UI/molecules/Modal/ModalItem.js","components/UI/atoms/lockOverlay.js","components/UI/organisms/main/DailyModal.js","components/UI/organisms/main/MainCalendarContent.js","components/UI/organisms/main/MainCalendarBody.js","assets/svg/prev_arrow.svg","assets/svg/next_arrow.svg","components/UI/organisms/main/MainCalendarHeader.js","components/UI/organisms/main/MainCalendar.js","components/UI/molecules/main/MainItemProgress.js","components/UI/molecules/main/ModalButtonContainer.js","components/UI/molecules/main/MonthCurrent.js","components/UI/organisms/main/MainHeader.js","components/UI/molecules/side/Progressbar.js","assets/svg/plus-solid.svg","components/UI/atoms/form.js","components/UI/atoms/input.js","components/UI/molecules/side/TodoCreate.js","components/UI/organisms/side/SideBottom.js","components/UI/molecules/side/LeftHeader.js","assets/svg/book-solid.svg","components/UI/molecules/side/RightHeader.js","components/UI/organisms/side/SideHeader.js","components/UI/molecules/side/TodoButton.js","components/UI/organisms/side/TodoItem.js","components/UI/organisms/side/TodoOrganism.js","components/templates/TodoTemplate.js","components/templates/CalendarTemplate.js","components/UI/molecules/header/Compare.js","components/UI/molecules/header/Goal.js","components/UI/organisms/head/useWeather.js","components/UI/molecules/header/Weather.js","components/UI/organisms/head/SummaryWeather.js","components/templates/SummaryTemplate.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","dbService","firestore","storage","dayjs","require","weekday","isoWeek","weekOfYear","relativeTime","extend","initialState","viewDate","selectDate","today","isModal","selectDateTodos","id","todo","label","done","grade","Calendarreducer","state","action","type","add","subtract","current","console","log","Error","CalendarStateContext","createContext","CalendarDispatchContext","useCalendarState","context","useContext","useCalendarDispatch","CalendarProvider","children","useReducer","dispatch","Provider","value","StyledFlexBox","styled","div","props","dir","margin","padding","bgColor","FlexBox","StyledModalBg","StyledModal","Modal","PostTitleStyle","h1","h2","PostLabelStyle","PostTitle","DefaultCircleButton","button","color","svg","DefaultRectangleButton","CircleButton","onClick","name","RectangleButton","CircularSign","bgcolor","Sign","goals","todos","reducer","concat","map","filter","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","nextId","useRef","date","Date","getDaily","a","collection","doc","toLocaleDateString","onSnapshot","docs","data","dailyArray","useEffect","useTodoState","useTodoDispatch","StyledTodo","RestyleRectangleButton","RestylePostLabel","Todo","text","useState","more","setMore","moreClick","prev","Close","check","More","Edit","ModalItem","LockOverlay","width","height","LockOver","StyledDailyModal","CloseButton","DailyModal","format","StyledMainCalendarContent","CalendarRow","DayButton","DayText","MainCalendarContent","selectDaily","setSelectDaily","startWeek","startOf","week","endWeek","endOf","fetchDaily","error","window","alert","calender","push","Array","fill","n","i","isSelected","isToday","isNone","className","StyledBody","RestyledFlexBox","RestyledPostTitleStyle","MainCalendarBody","StyledHeader","CalendarHeader","previous","next","StyledMainCalendar","MainCalendar","StyledMainItemProgress","MainItemProgress","StyledModalButtonContainer","ModalButtonContainer","StyledMonthCurrent","MonthCurrent","StyledMainHeader","MainHeader","RestyledPostTitle","Progressbar","doneTasks","achievement","length","Math","round","PostFormStyle","form","PostForm","onSubmit","PostInputStyle","input","PostLabelInputStyle","PostInput","onChange","placeholder","PostLabelInput","StyledTodoCreate","open","css","TodoCreate","inputBtn","setInputBtn","setTodo","setLabel","useTodoNextId","e","target","Plus","preventDefault","required","SideBottom","LeftHeader","goal","setValue","year","getFullYear","month","getMonth","day","getDate","minutes","getMinutes","hours","getHours","saveSchedule","set","createdAt","now","confirm","RightHeader","Book","PostHeader","SideHeader","TodoButton","onToggle","ThumbsUp","Circle","ThumbsDown","StyledTodoItem","TodoItem","StyledSideMain","TodoOrganism","StyledTodoTemplate","TodoTemplate","StyledCalendarTemplate","CalendarTemplate","Compare","StyledGoal","Goal","useWeather","StyledWeather","Weather","size","StyledSummaryWeather","SummaryWeather","SummaryTemplate","StyledApp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee9f468.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDsxh2JUWGFNaReJZpiHPfz2WWuGOCy8fw',\r\n  authDomain: 'schedule-84d6f.firebaseapp.com',\r\n  projectId: 'schedule-84d6f',\r\n  storageBucket: 'schedule-84d6f.appspot.com',\r\n  messagingSenderId: '1057171695073',\r\n  appId: '1:1057171695073:web:8dc0219b3a191fcfba5ea0',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\nimport { dbService } from '../../firebase';\r\n\r\n//day\r\nconst dayjs = require('dayjs');\r\nconst weekday = require('dayjs/plugin/weekday');\r\nconst isoWeek = require('dayjs/plugin/isoWeek');\r\nconst weekOfYear = require('dayjs/plugin/weekOfYear');\r\nconst relativeTime = require('dayjs/plugin/relativeTime');\r\n// day extend\r\ndayjs.extend(weekday);\r\ndayjs.extend(isoWeek);\r\ndayjs.extend(weekOfYear);\r\ndayjs.extend(relativeTime);\r\n\r\nlet initialState = {\r\n  viewDate: dayjs(),\r\n  selectDate: dayjs(),\r\n  today: dayjs(),\r\n  isModal: false,\r\n  selectDateTodos: [\r\n    {\r\n      id: 1,\r\n      todo: '8시 기상',\r\n      label: '아침 습관 들이기',\r\n      done: false,\r\n      grade: '',\r\n    },\r\n    {\r\n      id: 2,\r\n      todo: '9시 기상',\r\n      label: '아침 습관 들이기',\r\n      done: false,\r\n      grade: '',\r\n    },\r\n  ],\r\n};\r\n\r\nfunction Calendarreducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return { ...state, viewDate: state.viewDate.add(1, 'month') };\r\n    case 'SUBSTRACT':\r\n      return { ...state, viewDate: state.viewDate.subtract(1, 'month') };\r\n    case 'SELECT_DATE':\r\n      return {\r\n        ...state,\r\n        selectDate: action.current,\r\n      };\r\n    case 'OPEN_MODAL':\r\n      console.log(action.selectDate);\r\n      console.log('hi');\r\n      return {\r\n        ...state,\r\n        isModal: !state.isModal,\r\n        selectDateTodos: action.selectDateTodos,\r\n      };\r\n    case 'CLOSE_MODAL':\r\n      return { ...state, isModal: !state.isModal, selectDateTodos: [] };\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst CalendarStateContext = createContext();\r\nconst CalendarDispatchContext = createContext();\r\n\r\nexport function CalendarProvider({ children }) {\r\n  const [state, dispatch] = useReducer(Calendarreducer, initialState);\r\n  return (\r\n    <CalendarStateContext.Provider value={state}>\r\n      <CalendarDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </CalendarDispatchContext.Provider>\r\n    </CalendarStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCalendarState() {\r\n  const context = useContext(CalendarStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find CalendarProvider');\r\n  }\r\n  return context;\r\n}\r\nexport function useCalendarDispatch() {\r\n  const context = useContext(CalendarDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find CalendarProvider');\r\n  }\r\n  return context;\r\n}\r\n//이거 왜 default 안 하면 안되는 지 물어보기\r\nexport default CalendarProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFlexBox = styled.div`\r\n  display: flex;\r\n  /* flex: 1; */\r\n  border-radius: 8px;\r\n  flex-direction: ${(props) => props.dir};\r\n  margin: ${(props) => props.margin};\r\n  padding: ${(props) => props.padding};\r\n  background-color: ${(props) => props.bgColor};\r\n`;\r\n\r\nexport const FlexBox = ({ dir, children, margin, padding, bgColor }) => {\r\n  return (\r\n    <StyledFlexBox\r\n      bgColor={bgColor}\r\n      padding={padding}\r\n      margin={margin}\r\n      dir={dir}\r\n    >\r\n      {children}\r\n    </StyledFlexBox>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledFlexBox } from '../atoms/box';\r\n\r\nconst StyledModalBg = styled.div`\r\n  z-index: 99;\r\n  top: 0;\r\n  overflow-y: hidden;\r\n  cursor: default;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  left: 0;\r\n`;\r\n\r\nconst StyledModal = styled(StyledFlexBox)`\r\n  width: 400px;\r\n  min-height: 179px;\r\n  border-radius: 16px;\r\n  background-color: #fff;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction Modal({ children }) {\r\n  return (\r\n    <StyledModalBg>\r\n      <StyledModal>{children}</StyledModal>\r\n    </StyledModalBg>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nconst PostHeaderStyle = styled.h1`\r\n  font-family: 'Montserrat', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.2;\r\n  letter-spacing: -0.8px;\r\n  color: #272b31;\r\n  margin: ${(props) => props.margin};\r\n`;\r\n\r\nexport const PostTitleStyle = styled.h2`\r\n  font-family: 'Roboto', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  line-height: 1.33;\r\n  color: #222;\r\n  margin: ${(props) => props.margin};\r\n  word-break: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PostLabelStyle = styled.div`\r\n  font-family: 'Roboto', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  font-size: 11px;\r\n  font-weight: 400;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  color: #999;\r\n  margin: ${(props) => props.margin};\r\n`;\r\n\r\nexport const PostHeader = ({ children, margin }) => {\r\n  return <PostHeaderStyle margin={margin}>{children}</PostHeaderStyle>;\r\n};\r\n\r\nexport const PostTitle = ({ children, margin }) => {\r\n  return <PostTitleStyle margin={margin}>{children}</PostTitleStyle>;\r\n};\r\n\r\nexport const PostLabel = ({ children, margin }) => {\r\n  return <PostLabelStyle margin={margin}>{children}</PostLabelStyle>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/close-light.ee9aede1.svg\";","import styled from 'styled-components';\r\n\r\nexport const DefaultCircleButton = styled.button`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-size: 20px 20px;\r\n  background-position: 50%;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  color: ${(props) => props.color};\r\n  background-image: url(${(props) => props.svg});\r\n  border: none;\r\n  background-color: transparent;\r\n  margin: ${(props) => props.margin};\r\n  &:hover {\r\n    background-color: #f6f8fa;\r\n  }\r\n`;\r\n\r\nexport const DefaultRectangleButton = styled.button`\r\n  padding: ${(props) => props.padding};\r\n  border-radius: 8px;\r\n  font-family: 'Montserrat', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  letter-spacing: -0.35px;\r\n  margin: ${(props) => props.margin};\r\n  color: #969aa2;\r\n  border: none;\r\n  background-color: transparent;\r\n  &:hover {\r\n    background-color: #f6f8fa;\r\n  }\r\n  &:active {\r\n    background-color: #eef1f4;\r\n    color: #52565d;\r\n  }\r\n`;\r\n\r\nexport const CircleButton = ({ margin, svg, onClick, ...props }) => {\r\n  return (\r\n    <DefaultCircleButton\r\n      onClick={onClick}\r\n      svg={svg}\r\n      margin={margin}\r\n      name={props.name && props.name}\r\n    ></DefaultCircleButton>\r\n  );\r\n};\r\n\r\nexport const RectangleButton = ({ children, margin, padding, onClick }) => {\r\n  return (\r\n    <DefaultRectangleButton onClick={onClick} margin={margin} padding={padding}>\r\n      {children}\r\n    </DefaultRectangleButton>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst CircularSign = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  background-image: url(${(props) => props.svg});\r\n  background-color: ${(props) => props.bgcolor};\r\n  background-size: 14px 10px;\r\n  background-position: 50%;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  margin: ${(props) => props.margin};\r\n`;\r\n\r\nexport const Sign = ({ svg, bgcolor, margin, onClick }) => {\r\n  return (\r\n    <CircularSign\r\n      onClick={onClick}\r\n      margin={margin}\r\n      svg={svg}\r\n      bgcolor={bgcolor}\r\n    ></CircularSign>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/check-light.d63e2f1c.svg\";","export default __webpack_public_path__ + \"static/media/edit-solid.4ffe848a.svg\";","export default __webpack_public_path__ + \"static/media/more-light.f601fd6a.svg\";","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useRef,\r\n} from 'react';\r\nimport { dbService } from '../../firebase';\r\n\r\nlet initialState = {\r\n  goals: '치열하게 살기',\r\n  todos: [\r\n    {\r\n      id: 1,\r\n      todo: '8시 기상',\r\n      label: '아침 습관 들이기',\r\n      done: false,\r\n      grade: '',\r\n    },\r\n  ],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'INITIALIZE':\r\n      return { ...state, todos: action.todos };\r\n    case 'CREATE':\r\n      return { ...state, todos: state.todos.concat(action.todo) };\r\n    case 'TOGGLE':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo.id === action.id\r\n            ? { ...todo, done: !todo.done, grade: action.grade }\r\n            : todo,\r\n        ),\r\n      };\r\n    case 'REMOVE':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.id),\r\n      };\r\n    case 'CLEAR':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo.id === action.id\r\n            ? {\r\n                ...todo,\r\n                done: false,\r\n                grade: '',\r\n              }\r\n            : todo,\r\n        ),\r\n      };\r\n    case 'CREATE_GOAL':\r\n      return { ...state, goals: action.goals };\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  let nextId = useRef(2);\r\n  // 데이터 탐색을 위한 Date객체\r\n  const date = new Date();\r\n  const getDaily = async () => {\r\n    dbService\r\n      .collection('daily')\r\n      .doc(`${date.toLocaleDateString()}`)\r\n      .onSnapshot((docs) => {\r\n        if (docs.data() && docs.data().todos) {\r\n          const dailyArray = docs.data().todos;\r\n\r\n          dispatch({\r\n            type: 'INITIALIZE',\r\n            todos: dailyArray,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDaily();\r\n  }, []);\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Sign } from '../../atoms/sign';\r\nimport check from '../.././../../assets/svg/check-light.svg';\r\nimport { PostLabelStyle, PostTitle } from '../../atoms/text';\r\nimport { CircleButton, DefaultRectangleButton } from '../../atoms/button';\r\nimport Edit from '../../../../assets/svg/edit-solid.svg';\r\nimport More from '../../../../assets/svg/more-light.svg';\r\nimport styled from 'styled-components';\r\nimport Close from '../../../../assets/svg/close-light.svg';\r\nimport { FlexBox } from '../../atoms/box';\r\nimport { useTodoDispatch } from '../../../pages/TodoPage';\r\n\r\nexport const StyledTodo = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  min-height: 40px;\r\n  & > div:first-child {\r\n    z-index: 10;\r\n    background-color: ${(props) => {\r\n      switch (props.grade) {\r\n        case 'good':\r\n          return 'rgb(0, 189, 184)';\r\n        case 'soso':\r\n          return '#ffff83';\r\n        case 'bad':\r\n          return '#f35750';\r\n        default:\r\n          return '';\r\n      }\r\n    }};\r\n  }\r\n`;\r\nexport const RestyleRectangleButton = styled(DefaultRectangleButton)`\r\n  color: #f35750;\r\n`;\r\n\r\nexport const RestylePostLabel = styled(PostLabelStyle)`\r\n  font-size: 18px;\r\n`;\r\n\r\nfunction Todo({ text, label, done, grade, id }) {\r\n  const [more, setMore] = useState(false);\r\n  const dispatch = useTodoDispatch();\r\n  const moreClick = () => {\r\n    setMore((prev) => !prev);\r\n  };\r\n  const onClear = () => {\r\n    dispatch({\r\n      type: 'CLEAR',\r\n      id,\r\n    });\r\n  };\r\n\r\n  const onRemove = () => {\r\n    dispatch({\r\n      type: 'REMOVE',\r\n      id,\r\n    });\r\n  };\r\n  return (\r\n    <StyledTodo grade={grade}>\r\n      {/* 현황 */}\r\n      {!done ? (\r\n        <Sign svg={check} bgcolor={'#b0b4bd'} margin={'0 10px 0 0'} />\r\n      ) : (\r\n        <Sign\r\n          onClick={onClear}\r\n          svg={Close}\r\n          bgcolor={'rgb(0, 189, 184)'}\r\n          margin={'0 10px 0 0'}\r\n        />\r\n      )}\r\n\r\n      {/* 할 일 내용 */}\r\n      {/* onClick에 함수 지정 시 클릭 할 때마다 변경, onClick지정 안해도 Toggle 됨 */}\r\n      <FlexBox dir={'column'}>\r\n        <FlexBox dir={'row'}>\r\n          <PostTitle margin={'0 0 0 5px'}>{text}</PostTitle>\r\n\r\n          {!more ? (\r\n            <CircleButton margin={'px'} onClick={moreClick} svg={More} />\r\n          ) : (\r\n            <CircleButton margin={'0px'} onClick={moreClick} svg={Close} />\r\n          )}\r\n          <CircleButton margin={'px'} onClick={() => {}} svg={Edit} />\r\n        </FlexBox>\r\n        <FlexBox dir={'column'}>\r\n          {more && (\r\n            <RestylePostLabel margin={'10px'}>\r\n              {label}\r\n              <RestyleRectangleButton onClick={onRemove}>\r\n                제거\r\n              </RestyleRectangleButton>\r\n            </RestylePostLabel>\r\n          )}\r\n        </FlexBox>\r\n      </FlexBox>\r\n    </StyledTodo>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","export default __webpack_public_path__ + \"static/media/thumbs-up-regular.46046a17.svg\";","export default __webpack_public_path__ + \"static/media/thumbs-down-regular.6e079b49.svg\";","export default __webpack_public_path__ + \"static/media/circle-regular.cc5af16b.svg\";","import React, { useState } from 'react';\r\nimport { Sign } from '../../atoms/sign';\r\nimport {\r\n  RestylePostLabel,\r\n  RestyleRectangleButton,\r\n  StyledTodo,\r\n} from '../side/Todo';\r\nimport check from '../.././../../assets/svg/check-light.svg';\r\nimport Close from '../../../../assets/svg/close-light.svg';\r\nimport { FlexBox } from '../../atoms/box';\r\nimport { PostTitle } from '../../atoms/text';\r\nimport { CircleButton } from '../../atoms/button';\r\nimport More from '../../../../assets/svg/more-light.svg';\r\nimport Edit from '../../../../assets/svg/edit-solid.svg';\r\nimport ThumbsUp from '../../../../assets/svg/thumbs-up-regular.svg';\r\nimport ThumbsDown from '../../../../assets/svg/thumbs-down-regular.svg';\r\nimport Circle from '../../../../assets/svg/circle-regular.svg';\r\n\r\nfunction ModalItem({ text, label, done, grade, id }) {\r\n  const [more, setMore] = useState(false);\r\n  const moreClick = () => {\r\n    setMore((prev) => !prev);\r\n  };\r\n  const onClear = () => {};\r\n  const onRemove = () => {};\r\n\r\n  return (\r\n    <FlexBox dir={'row'}>\r\n      <StyledTodo grade={grade}>\r\n        {/* 현황 */}\r\n        {!done ? (\r\n          <Sign svg={check} bgcolor={'#b0b4bd'} margin={'0 10px 0 0'} />\r\n        ) : (\r\n          <Sign\r\n            onClick={onClear}\r\n            svg={Close}\r\n            bgcolor={'rgb(0, 189, 184)'}\r\n            margin={'0 10px 0 0'}\r\n          />\r\n        )}\r\n\r\n        {/* 할 일 내용 */}\r\n        {/* onClick에 함수 지정 시 클릭 할 때마다 변경, onClick지정 안해도 Toggle 됨 */}\r\n        <FlexBox dir={'column'}>\r\n          <FlexBox dir={'row'}>\r\n            <PostTitle margin={'0 0 0 5px'}>{text}</PostTitle>\r\n\r\n            {!more ? (\r\n              <CircleButton margin={'px'} onClick={moreClick} svg={More} />\r\n            ) : (\r\n              <CircleButton margin={'0px'} onClick={moreClick} svg={Close} />\r\n            )}\r\n            <CircleButton margin={'px'} onClick={() => {}} svg={Edit} />\r\n          </FlexBox>\r\n          <FlexBox dir={'column'}>\r\n            {more && (\r\n              <RestylePostLabel margin={'10px'}>\r\n                {label}\r\n                <RestyleRectangleButton onClick={onRemove}>\r\n                  제거\r\n                </RestyleRectangleButton>\r\n              </RestylePostLabel>\r\n            )}\r\n          </FlexBox>\r\n        </FlexBox>\r\n      </StyledTodo>\r\n    </FlexBox>\r\n  );\r\n}\r\n\r\nexport default ModalItem;\r\n","import styled from 'styled-components';\r\n\r\nconst LockOverlay = styled.div`\r\n  position: absolute;\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n`;\r\n\r\nexport const LockOver = ({ width, height }) => {\r\n  return <LockOverlay width={width} height={height}></LockOverlay>;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useCalendarDispatch,\r\n  useCalendarState,\r\n} from '../../../pages/CalendarPage';\r\nimport { PostTitle } from '../../atoms/text';\r\nimport Close from '../../../../assets/svg/close-light.svg';\r\nimport { DefaultCircleButton } from '../../atoms/button';\r\nimport { FlexBox, StyledFlexBox } from '../../atoms/box';\r\n\r\nimport ModalItem from '../../molecules/Modal/ModalItem';\r\nimport { LockOver } from '../../atoms/lockOverlay';\r\n\r\nconst StyledDailyModal = styled(StyledFlexBox)``;\r\n\r\nconst CloseButton = styled(DefaultCircleButton)`\r\n  width: 32px;\r\n  height: 32px;\r\n  background-size: 24px;\r\n  background-repeat: no-repeat;\r\n  background-position: 50%;\r\n  border-radius: 50%;\r\n  margin-left: auto;\r\n  z-index: 10;\r\n`;\r\n\r\nfunction DailyModal() {\r\n  const state = useCalendarState();\r\n  const dispatch = useCalendarDispatch();\r\n  const { selectDateTodos } = state;\r\n\r\n  const { selectDate } = state;\r\n  const onClick = () => {\r\n    dispatch({\r\n      type: 'CLOSE_MODAL',\r\n    });\r\n  };\r\n  return (\r\n    <StyledDailyModal dir={'column'}>\r\n      <FlexBox dir={'row'}>\r\n        <PostTitle>{selectDate.format('YYYY년 MM월 DD일')}</PostTitle>\r\n        <CloseButton\r\n          margin={'0px'}\r\n          onClick={onClick}\r\n          svg={Close}\r\n          color={'#0c0300d1'}\r\n        />\r\n      </FlexBox>\r\n      {selectDateTodos.map((todo) => (\r\n        <>\r\n          {todo.done && <LockOver width={'520px'} height={'40px'}></LockOver>}\r\n          <ModalItem\r\n            key={todo.id}\r\n            id={todo.id}\r\n            text={todo.todo}\r\n            done={todo.done}\r\n            label={todo.label}\r\n            grade={todo.grade}\r\n          />\r\n        </>\r\n      ))}\r\n    </StyledDailyModal>\r\n  );\r\n}\r\n\r\nexport default DailyModal;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService } from '../../../../firebase';\r\nimport {\r\n  useCalendarDispatch,\r\n  useCalendarState,\r\n} from '../../../pages/CalendarPage';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\nimport { DefaultRectangleButton } from '../../atoms/button';\r\nimport { PostLabelStyle } from '../../atoms/text';\r\n\r\nconst StyledMainCalendarContent = styled(StyledFlexBox)`\r\n  width: 140px;\r\n  height: 64px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  text-align: center;\r\n  & > div {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .selected {\r\n    background: rgba(0, 189, 184, 0.5);\r\n    font-weight: 700;\r\n    color: #fff;\r\n  }\r\n  .today {\r\n    position: relative;\r\n\r\n    font-weight: 500;\r\n    background: #ffff83;\r\n  }\r\n  .none {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CalendarRow = styled(StyledFlexBox)`\r\n  width: 100%;\r\n`;\r\n\r\nconst DayButton = styled(DefaultRectangleButton)`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DayText = styled(PostLabelStyle)`\r\n  font-size: 14px;\r\n`;\r\n\r\nfunction MainCalendarContent() {\r\n  const { viewDate, selectDate, today } = useCalendarState();\r\n  const dispatch = useCalendarDispatch();\r\n  const [selectDaily, setSelectDaily] = useState([]);\r\n\r\n  const startWeek = viewDate.startOf('month').week();\r\n  const endWeek =\r\n    viewDate.endOf('month').week() === 1 ? 53 : viewDate.endOf('month').week();\r\n  const fetchDaily = async (current) => {\r\n    console.log(current);\r\n    await dbService\r\n      .collection('daily')\r\n      .doc(`${current.format('YYYY. M. D.')}`)\r\n      .onSnapshot((docs) => {\r\n        try {\r\n          // console.log(docs.data().todos);\r\n          setSelectDaily(docs.data().todos);\r\n          dispatch({\r\n            type: 'OPEN_MODAL',\r\n            selectDateTodos: selectDaily,\r\n            selectDate,\r\n          });\r\n        } catch (error) {\r\n          window.alert(error);\r\n        }\r\n      });\r\n  };\r\n  let calender = [];\r\n  for (let week = startWeek; week <= endWeek; week++) {\r\n    calender.push(\r\n      <CalendarRow dir={'row'} key={week}>\r\n        {Array(7)\r\n          .fill(0)\r\n          .map((n, i) => {\r\n            let current = viewDate\r\n              .startOf('week')\r\n              .week(week)\r\n              .add(n + i, 'day');\r\n            if (viewDate.format('MM') === '12') {\r\n              current = viewDate\r\n                .startOf('week')\r\n                .week(week - 52)\r\n                .add(n + i, 'day');\r\n            }\r\n            // 현재 날짜 (기준)\r\n            let isSelected =\r\n              selectDate.format('YYYYMMDD') === current.format('YYYYMMDD')\r\n                ? 'selected'\r\n                : '';\r\n            let isToday =\r\n              today.format('YYYYMMDD') === current.format('YYYYMMDD')\r\n                ? 'today'\r\n                : '';\r\n            let isNone =\r\n              current.format('MM') === viewDate.format('MM') ? '' : 'none';\r\n            return (\r\n              <>\r\n                <StyledMainCalendarContent key={`${week}_${i}`}>\r\n                  <DayButton\r\n                    key={`${week}_${i}`}\r\n                    className={`${isSelected} ${isToday} ${isNone}`}\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: 'SELECT_DATE',\r\n                        current,\r\n                      });\r\n\r\n                      const dailyArray = fetchDaily(selectDate);\r\n                    }}\r\n                  >\r\n                    <DayText>{current.format('D')}</DayText>\r\n                    {/* 할 일 목록 리스트 나열하기 */}\r\n                  </DayButton>\r\n                </StyledMainCalendarContent>\r\n              </>\r\n            );\r\n          })}\r\n      </CalendarRow>,\r\n    );\r\n  }\r\n  return calender;\r\n}\r\nexport default MainCalendarContent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FlexBox, StyledFlexBox } from '../../atoms/box';\r\nimport { PostTitleStyle } from '../../atoms/text';\r\nimport MainCalendarContent from './MainCalendarContent';\r\n\r\nconst StyledBody = styled.div`\r\n  text-align: center;\r\n\r\n  width: 80%;\r\n  margin: 20px auto 0px;\r\n\r\n  & > div:first-child {\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const RestyledFlexBox = styled(StyledFlexBox)`\r\n  width: 140px;\r\n  height: 32px;\r\n  margin: 6px 6px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst RestyledPostTitleStyle = styled(PostTitleStyle)`\r\n  position: static;\r\n  height: 32px;\r\n  color: #292929;\r\n`;\r\n\r\nfunction MainCalendarBody() {\r\n  return (\r\n    <StyledBody>\r\n      <FlexBox dir={'row'}>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>SUN</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>MON</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>TUE</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>WED</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>THU</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>FRI</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n        <RestyledFlexBox>\r\n          <RestyledPostTitleStyle>SAT</RestyledPostTitleStyle>\r\n        </RestyledFlexBox>\r\n      </FlexBox>\r\n      <FlexBox dir={'column'}>\r\n        <MainCalendarContent></MainCalendarContent>\r\n      </FlexBox>\r\n    </StyledBody>\r\n  );\r\n}\r\n\r\nexport default MainCalendarBody;\r\n","export default __webpack_public_path__ + \"static/media/prev_arrow.0734b900.svg\";","export default __webpack_public_path__ + \"static/media/next_arrow.63680cf8.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport previous from '../../../../assets/svg/prev_arrow.svg';\r\nimport next from '../../../../assets/svg/next_arrow.svg';\r\nimport {\r\n  useCalendarDispatch,\r\n  useCalendarState,\r\n} from '../../../pages/CalendarPage';\r\nimport { PostTitle } from '../../atoms/text';\r\nimport { CircleButton } from '../../atoms/button';\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: 20px;\r\n`;\r\n\r\nfunction CalendarHeader() {\r\n  const { viewDate } = useCalendarState();\r\n  const dispatch = useCalendarDispatch();\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <CircleButton\r\n        onClick={() =>\r\n          dispatch({\r\n            type: 'SUBSTRACT',\r\n          })\r\n        }\r\n        margin={'0px 8px'}\r\n        svg={previous}\r\n      ></CircleButton>\r\n      <PostTitle>{viewDate.format('YY년-MM월')}</PostTitle>\r\n      <CircleButton\r\n        onClick={() =>\r\n          dispatch({\r\n            type: 'ADD',\r\n          })\r\n        }\r\n        margin={'0px 8px'}\r\n        svg={next}\r\n      ></CircleButton>\r\n    </StyledHeader>\r\n  );\r\n}\r\nexport default CalendarHeader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useCalendarState } from '../../../pages/CalendarPage';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\nimport Modal from '../modal';\r\nimport DailyModal from './DailyModal';\r\nimport MainCalendarBody from './MainCalendarBody';\r\nimport MainCalendarHeader from './MainCalendarHeader';\r\n\r\nconst StyledMainCalendar = styled(StyledFlexBox)`\r\n  height: 71%;\r\n  border: 1px solid black;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction MainCalendar() {\r\n  const { isModal } = useCalendarState();\r\n  return (\r\n    <StyledMainCalendar>\r\n      <MainCalendarBody></MainCalendarBody>\r\n      {isModal && (\r\n        <Modal>\r\n          <DailyModal></DailyModal>\r\n        </Modal>\r\n      )}\r\n    </StyledMainCalendar>\r\n  );\r\n}\r\nexport default MainCalendar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\n\r\nconst StyledMainItemProgress = styled(StyledFlexBox)`\r\n  width: 20%;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nfunction MainItemProgress() {\r\n  return <StyledMainItemProgress></StyledMainItemProgress>;\r\n}\r\n\r\nexport default MainItemProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\n\r\nconst StyledModalButtonContainer = styled(StyledFlexBox)`\r\n  width: 20%;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nfunction ModalButtonContainer() {\r\n  return <StyledModalButtonContainer></StyledModalButtonContainer>;\r\n}\r\n\r\nexport default ModalButtonContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\n\r\nconst StyledMonthCurrent = styled(StyledFlexBox)`\r\n  width: 50%;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction MonthCurrent({ children }) {\r\n  return <StyledMonthCurrent>{children}</StyledMonthCurrent>;\r\n}\r\n\r\nexport default MonthCurrent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledFlexBox } from '../../atoms/box';\r\nimport MainItemProgress from '../../molecules/main/MainItemProgress';\r\nimport ModalButtonContainer from '../../molecules/main/ModalButtonContainer';\r\nimport MonthCurrent from '../../molecules/main/MonthCurrent';\r\nimport CalendarHeader from './MainCalendarHeader';\r\n\r\nconst StyledMainHeader = styled(StyledFlexBox)`\r\n  height: 16.1%;\r\n  width: 90%;\r\n  margin: 20px auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nfunction MainHeader() {\r\n  return (\r\n    <StyledMainHeader dir={'row'}>\r\n      <MainItemProgress></MainItemProgress>\r\n      <MonthCurrent>\r\n        <CalendarHeader></CalendarHeader>\r\n      </MonthCurrent>\r\n      <ModalButtonContainer></ModalButtonContainer>\r\n    </StyledMainHeader>\r\n  );\r\n}\r\n\r\nexport default MainHeader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../../../pages/TodoPage';\r\nimport { PostTitleStyle } from '../../atoms/text';\r\n\r\nconst RestyledPostTitle = styled(PostTitleStyle)`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nfunction Progressbar() {\r\n  const { todos } = useTodoState();\r\n  const doneTasks = todos.filter((todo) => !todo.done);\r\n  const goodTasks = todos.filter((todo) => todo.grade === 'good').length;\r\n  const sosoTasks = todos.filter((todo) => todo.grade === 'soso').length;\r\n  const badTasks = todos.filter((todo) => todo.grade === 'bad').length;\r\n  const achievement =\r\n    ((goodTasks * 1 + sosoTasks * 0.5 + badTasks * 0) / todos.length) * 100;\r\n  return (\r\n    <>\r\n      <PostTitleStyle margin={'10px'}>\r\n        {Math.round(100 - (doneTasks.length / todos.length) * 100)}%\r\n        완료하였습니다\r\n      </PostTitleStyle>\r\n      <RestyledPostTitle margin={'10px'}>\r\n        {Math.round(achievement)}% 성취하였습니다.\r\n      </RestyledPostTitle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Progressbar;\r\n","export default __webpack_public_path__ + \"static/media/plus-solid.c82024f4.svg\";","import styled from 'styled-components';\r\n\r\nconst PostFormStyle = styled.form`\r\n  width: 100%;\r\n  flex-shrink: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border-radius: 8px;\r\n  border: 1px solid #dde1e7;\r\n`;\r\n\r\nexport const PostForm = ({ onSubmit, children }) => {\r\n  return <PostFormStyle onSubmit={onSubmit}>{children}</PostFormStyle>;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst PostInputStyle = styled.input`\r\n  border: none;\r\n  border-radius: 8px;\r\n  background-color: #eef1f4;\r\n  font-family: 'Roboto', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  line-height: 1.2;\r\n  font-size: 16px;\r\n  outline: none;\r\n  color: #333;\r\n  padding: ${(props) => props.padding};\r\n`;\r\n\r\nconst PostLabelInputStyle = styled.input`\r\n  outline: none;\r\n  border: none;\r\n  appearance: none;\r\n  font-family: 'Roboto', 'Noto Sans KR', 'Noto Sans JP', 'Noto Sans SC',\r\n    sans-serif;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 18px;\r\n  letter-spacing: normal;\r\n  color: #555;\r\n  padding: ${(props) => props.padding};\r\n`;\r\n\r\nexport const PostInput = ({ onChange, padding, placeholder, name, value }) => {\r\n  return (\r\n    <PostInputStyle\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      padding={padding}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PostLabelInput = ({\r\n  onChange,\r\n  padding,\r\n  placeholder,\r\n  name,\r\n  value,\r\n}) => {\r\n  return (\r\n    <PostLabelInputStyle\r\n      type=\"text\"\r\n      padding={padding}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      name={name}\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Plus from '../../../../assets/svg/plus-solid.svg';\r\nimport { useTodoDispatch, useTodoNextId } from '../../../pages/TodoPage';\r\nimport { CircleButton, RectangleButton } from '../../atoms/button';\r\nimport { PostForm } from '../../atoms/form';\r\nimport { PostInput, PostLabelInput } from '../../atoms/input';\r\n\r\nconst StyledTodoCreate = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  width: 100%;\r\n  flex-direction: column;\r\n\r\n  & > button {\r\n    transition: 0.125s all ease-in;\r\n    ${(props) =>\r\n      props.open &&\r\n      css`\r\n        transform: rotate(45deg);\r\n      `}\r\n  }\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  const [inputBtn, setInputBtn] = useState(false);\r\n  const [todo, setTodo] = useState('');\r\n  const [label, setLabel] = useState('');\r\n  const onClick = (e) => {\r\n    setInputBtn((prev) => !prev);\r\n  };\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        todo: todo,\r\n        label: label,\r\n        done: false,\r\n      },\r\n    });\r\n    nextId.current += 1;\r\n    setTodo('');\r\n    setLabel('');\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === 'todo') {\r\n      setTodo(value);\r\n    } else if (name === 'label') {\r\n      setLabel(value);\r\n    }\r\n  };\r\n  return (\r\n    <StyledTodoCreate open={inputBtn}>\r\n      <CircleButton\r\n        margin={'px'}\r\n        open={inputBtn}\r\n        onClick={onClick}\r\n        svg={Plus}\r\n        color\r\n      />\r\n      {inputBtn && (\r\n        <PostForm onSubmit={onSubmit}>\r\n          <PostInput\r\n            name=\"todo\"\r\n            required\r\n            placeholder={'할 일을 입력하세요'}\r\n            onChange={onChange}\r\n            value={todo}\r\n          />\r\n          <PostLabelInput\r\n            name=\"label\"\r\n            required\r\n            placeholder={'할 일을 입력하세요'}\r\n            onChange={onChange}\r\n            value={label}\r\n          />\r\n          <RectangleButton>생성</RectangleButton>\r\n        </PostForm>\r\n      )}\r\n    </StyledTodoCreate>\r\n  );\r\n}\r\n\r\nexport default TodoCreate;\r\n","import React from 'react';\r\nimport TodoCreate from '../../molecules/side/TodoCreate';\r\n\r\nfunction SideBottom() {\r\n  return (\r\n    <div>\r\n      <TodoCreate />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBottom;\r\n","import React, { useState } from 'react';\r\nimport { dbService } from '../../../../firebase';\r\nimport { useTodoDispatch, useTodoState } from '../../../pages/TodoPage';\r\nimport { RectangleButton } from '../../atoms/button';\r\nimport { PostForm } from '../../atoms/form';\r\nimport { PostInput } from '../../atoms/input';\r\nimport { PostTitle } from '../../atoms/text';\r\n\r\nfunction LeftHeader({ goal }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const minutes = date.getMinutes();\r\n  const hours = date.getHours();\r\n\r\n  const { goals, todos } = useTodoState();\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE_GOAL',\r\n      goals: value,\r\n    });\r\n  };\r\n\r\n  const saveSchedule = async () => {\r\n    const date = new Date();\r\n    await dbService\r\n      .collection('daily')\r\n      .doc(`${date.toLocaleDateString()}`)\r\n      .set({\r\n        todos,\r\n        createdAt: Date.now(),\r\n      });\r\n    window.confirm('저장되었습니다.');\r\n  };\r\n  //content-editable 사용 고려\r\n  return (\r\n    <div>\r\n      <PostTitle>\r\n        {`${year}년 \r\n          ${month >= 10 ? month : `0${month}`}월 \r\n          ${day >= 10 ? day : `0${day}`}일 \r\n          ${hours >= 10 ? hours : `0${hours}`}시 \r\n          ${minutes >= 10 ? minutes : `0${minutes}`}분 \r\n          `}\r\n        <RectangleButton onClick={saveSchedule}>저장</RectangleButton>\r\n      </PostTitle>\r\n      <PostTitle>오늘의 목표 : {goals}</PostTitle>\r\n      <PostForm onSubmit={onSubmit}>\r\n        <PostInput onChange={onChange}>{goal}</PostInput>\r\n      </PostForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftHeader;\r\n","export default __webpack_public_path__ + \"static/media/book-solid.03e5ef18.svg\";","import React from 'react';\r\nimport { CircleButton } from '../../atoms/button';\r\nimport Book from '../../../../assets/svg/book-solid.svg';\r\nimport Edit from '../../../../assets/svg/edit-solid.svg';\r\n\r\nfunction RightHeader() {\r\n  const onClick = () => {};\r\n  return (\r\n    <div>\r\n      <CircleButton\r\n        margin={'14px'}\r\n        onClick={onClick}\r\n        svg={Book}\r\n        color={'#5f4339'}\r\n      />\r\n      <CircleButton\r\n        margin={'14px'}\r\n        onClick={onClick}\r\n        svg={Edit}\r\n        color={'#5f4339'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightHeader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LeftHeader from '../../molecules/side/LeftHeader';\r\nimport RightHeader from '../../molecules/side/RightHeader';\r\n\r\nconst PostHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nfunction SideHeader() {\r\n  return (\r\n    <PostHeader>\r\n      <LeftHeader />\r\n      <RightHeader />\r\n    </PostHeader>\r\n  );\r\n}\r\n\r\nexport default SideHeader;\r\n","import React from 'react';\r\nimport ThumbsUp from '../../../../assets/svg/thumbs-up-regular.svg';\r\nimport ThumbsDown from '../../../../assets/svg/thumbs-down-regular.svg';\r\nimport Circle from '../../../../assets/svg/circle-regular.svg';\r\nimport { CircleButton } from '../../atoms/button';\r\nimport { useTodoDispatch } from '../../../pages/TodoPage';\r\n\r\nfunction TodoButton({ id, grade }) {\r\n  const dispatch = useTodoDispatch();\r\n\r\n  const onToggle = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    if (grade === name) {\r\n      dispatch({ type: 'TOGGLE', id, grade: '' });\r\n    } else dispatch({ type: 'TOGGLE', id, grade: name });\r\n  };\r\n  return (\r\n    <div>\r\n      {/* 완료도 평가 */}\r\n      {/* 스타일드div props지정안했을 때 넣는 법 */}\r\n      <CircleButton\r\n        name=\"good\"\r\n        onClick={onToggle}\r\n        margin={'0px'}\r\n        svg={ThumbsUp}\r\n        color\r\n      />\r\n      <CircleButton\r\n        name=\"soso\"\r\n        onClick={onToggle}\r\n        margin={'0px'}\r\n        svg={Circle}\r\n        color\r\n      />\r\n      <CircleButton\r\n        name=\"bad\"\r\n        onClick={onToggle}\r\n        margin={'0px'}\r\n        svg={ThumbsDown}\r\n        color\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LockOver } from '../../atoms/lockOverlay';\r\n\r\nimport Todo from '../../molecules/side/Todo';\r\nimport TodoButton from '../../molecules/side/TodoButton';\r\n\r\nconst StyledTodoItem = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  &.inactive {\r\n    &:hover {\r\n      background: #e0e0e0;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction TodoItem({ id, text, label, done, grade }) {\r\n  return (\r\n    <>\r\n      {done && <LockOver width={'520px'} height={'40px'}></LockOver>}\r\n      <StyledTodoItem className={done ? 'active' : 'inactive'}>\r\n        <Todo id={id} done={done} text={text} label={label} grade={grade} />\r\n        <TodoButton id={id} grade={grade} />\r\n      </StyledTodoItem>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../../../pages/TodoPage';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst StyledSideMain = styled.div`\r\n  width: 100%;\r\n  padding: 30px 10px;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n  height: 70%;\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  &::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\nfunction TodoOrganism() {\r\n  const { todos } = useTodoState();\r\n  return (\r\n    <StyledSideMain>\r\n      {todos.map((todo) => (\r\n        <div>\r\n          <TodoItem\r\n            key={todo.id}\r\n            id={todo.id}\r\n            text={todo.todo}\r\n            done={todo.done}\r\n            label={todo.label}\r\n            grade={todo.grade}\r\n          />\r\n        </div>\r\n      ))}\r\n    </StyledSideMain>\r\n  );\r\n}\r\n\r\nexport default TodoOrganism;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TodoProvider } from '../pages/TodoPage';\r\nimport Progressbar from '../UI/molecules/side/Progressbar';\r\nimport SideBottom from '../UI/organisms/side/SideBottom';\r\nimport SideHeader from '../UI/organisms/side/SideHeader';\r\nimport TodoOrganism from '../UI/organisms/side/TodoOrganism';\r\n\r\nconst StyledTodoTemplate = styled.div`\r\n  width: 31.25%;\r\n  height: 90%;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  position: absolute;\r\n  right: 50px;\r\n  top: 50px;\r\n`;\r\n\r\nfunction TodoTemplate() {\r\n  return (\r\n    <TodoProvider>\r\n      <StyledTodoTemplate>\r\n        <SideHeader />\r\n        <Progressbar />\r\n        <TodoOrganism />\r\n        <SideBottom />\r\n      </StyledTodoTemplate>\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MainCalendar from '../UI/organisms/main/MainCalendar';\r\nimport MainHeader from '../UI/organisms/main/MainHeader';\r\nimport CalendarProvider from '../pages/CalendarPage';\r\nimport Modal from '../UI/organisms/modal';\r\nimport TodoTemplate from './TodoTemplate';\r\n\r\nconst StyledCalendarTemplate = styled.div`\r\n  width: 56.45%;\r\n  height: 65%;\r\n  position: absolute;\r\n  left: 50px;\r\n  bottom: 50px;\r\n\r\n  border-radius: 8px;\r\n  background: #fff;\r\n`;\r\n\r\nfunction CalendarTemplate() {\r\n  return (\r\n    <CalendarProvider>\r\n      <StyledCalendarTemplate>\r\n        <MainHeader></MainHeader>\r\n        <MainCalendar></MainCalendar>\r\n      </StyledCalendarTemplate>\r\n    </CalendarProvider>\r\n  );\r\n}\r\n\r\nexport default CalendarTemplate;\r\n","import React from 'react';\r\nimport { PostTitle } from '../../atoms/text';\r\n\r\nfunction Compare() {\r\n  return (\r\n    <div>\r\n      <PostTitle>어제보다 이만큼 더 생산적으로 살았습니다.</PostTitle>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compare;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DefaultRectangleButton } from '../../atoms/button';\r\nimport { PostTitle } from '../../atoms/text';\r\n\r\nconst StyledGoal = styled.div`\r\n  display: flex;\r\n  h2 {\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nfunction Goal() {\r\n  return (\r\n    <StyledGoal>\r\n      <PostTitle>목표는 이것 입니다.</PostTitle>\r\n      <DefaultRectangleButton>수정</DefaultRectangleButton>\r\n      <DefaultRectangleButton>선택</DefaultRectangleButton>\r\n    </StyledGoal>\r\n  );\r\n}\r\n\r\nexport default Goal;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst API_KEY = 'f66ddbcb1622e2b67fe57c66d49dbd22';\r\n\r\nfunction useWeather() {\r\n  const [weatherObj, setWeatherObj] = useState(null);\r\n\r\n  const getWeather = async (lat, lng) => {\r\n    await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`,\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        const weather = json.weather[0].main;\r\n        const temp = json.main.temp;\r\n        setWeatherObj({ weather, temp });\r\n      });\r\n  };\r\n  const handleGeoSuccess = (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    const coordsObj = {\r\n      latitude,\r\n      longitude,\r\n    };\r\n\r\n    getWeather(latitude, longitude);\r\n  };\r\n  function handleGeoError() {\r\n    console.log('Cant access geo location');\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError);\r\n  }, []);\r\n  const { weather, temp } = weatherObj;\r\n  console.log(weather, temp);\r\n  return [weather, temp];\r\n}\r\n\r\nexport default useWeather;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TiAdjustBrightness } from 'react-icons/ti';\r\nimport { PostTitle } from '../../atoms/text';\r\n\r\nconst StyledWeather = styled.div`\r\n  display: flex;\r\n  border: 1px solid black;\r\n  height: 100px;\r\n`;\r\n\r\nfunction Weather() {\r\n  // 날씨 정보 불러오기\r\n  return (\r\n    <StyledWeather>\r\n      <TiAdjustBrightness size=\"32\" color=\"red\" />\r\n      {/* 날씨에 따라 이모티콘 바뀌도록 */}\r\n      <PostTitle>%% 도입니다.</PostTitle>\r\n    </StyledWeather>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useWeather from './useWeather';\r\nimport Weather from '../../molecules/header/Weather';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSummaryWeather = styled.div`\r\n  width: 30%;\r\n`;\r\n\r\nfunction SummaryWeather() {\r\n  return (\r\n    <StyledSummaryWeather>\r\n      <Weather />\r\n    </StyledSummaryWeather>\r\n  );\r\n}\r\n\r\nexport default SummaryWeather;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FlexBox, StyledFlexBox } from '../UI/atoms/box';\r\nimport Compare from '../UI/molecules/header/Compare';\r\nimport Goal from '../UI/molecules/header/Goal';\r\n\r\nimport SummaryWeather from '../UI/organisms/head/SummaryWeather';\r\n\r\nconst StyledCalendarTemplate = styled.div`\r\n  width: 56.45%;\r\n  height: 20%;\r\n  position: absolute;\r\n  left: 50px;\r\n  top: 50px;\r\n\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  padding: 2em;\r\n  display: flex;\r\n`;\r\nconst RestyledFlexBox = styled(StyledFlexBox)`\r\n  flex: 1;\r\n`;\r\nfunction SummaryTemplate() {\r\n  return (\r\n    <StyledCalendarTemplate>\r\n      <SummaryWeather></SummaryWeather>\r\n      <RestyledFlexBox dir={'column'} margin={'0 30px'}>\r\n        <Goal></Goal>\r\n        <Compare></Compare>\r\n      </RestyledFlexBox>\r\n    </StyledCalendarTemplate>\r\n  );\r\n}\r\nexport default SummaryTemplate;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport CalendarTemplate from './components/templates/CalendarTemplate';\nimport SummaryTemplate from './components/templates/SummaryTemplate';\nimport TodoTemplate from './components/templates/TodoTemplate';\n\nconst StyledApp = styled.div`\n  background-color: #eeeeee;\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n`;\n\nfunction App() {\n  return (\n    <StyledApp>\n      <SummaryTemplate />\n      <CalendarTemplate />\n      <TodoTemplate />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}